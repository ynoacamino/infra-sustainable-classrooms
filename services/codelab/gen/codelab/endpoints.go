// Code generated by goa v3.21.1, DO NOT EDIT.
//
// codelab endpoints
//
// Command:
// $ goa gen
// github.com/ynoacamino/infra-sustainable-classrooms/services/codelab/design/api
// -o ./services/codelab/

package codelab

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "codelab" service endpoints.
type Endpoints struct {
	CreateExercise               goa.Endpoint
	GetExercise                  goa.Endpoint
	ListExercises                goa.Endpoint
	UpdateExercise               goa.Endpoint
	DeleteExercise               goa.Endpoint
	CreateTest                   goa.Endpoint
	GetTestsByExercise           goa.Endpoint
	UpdateTest                   goa.Endpoint
	DeleteTest                   goa.Endpoint
	GetExerciseForStudent        goa.Endpoint
	ListExercisesForStudents     goa.Endpoint
	CreateAttempt                goa.Endpoint
	GetAttemptsByUserAndExercise goa.Endpoint
	GetAnswerByUserAndExercise   goa.Endpoint
}

// NewEndpoints wraps the methods of the "codelab" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		CreateExercise:               NewCreateExerciseEndpoint(s),
		GetExercise:                  NewGetExerciseEndpoint(s),
		ListExercises:                NewListExercisesEndpoint(s),
		UpdateExercise:               NewUpdateExerciseEndpoint(s),
		DeleteExercise:               NewDeleteExerciseEndpoint(s),
		CreateTest:                   NewCreateTestEndpoint(s),
		GetTestsByExercise:           NewGetTestsByExerciseEndpoint(s),
		UpdateTest:                   NewUpdateTestEndpoint(s),
		DeleteTest:                   NewDeleteTestEndpoint(s),
		GetExerciseForStudent:        NewGetExerciseForStudentEndpoint(s),
		ListExercisesForStudents:     NewListExercisesForStudentsEndpoint(s),
		CreateAttempt:                NewCreateAttemptEndpoint(s),
		GetAttemptsByUserAndExercise: NewGetAttemptsByUserAndExerciseEndpoint(s),
		GetAnswerByUserAndExercise:   NewGetAnswerByUserAndExerciseEndpoint(s),
	}
}

// Use applies the given middleware to all the "codelab" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.CreateExercise = m(e.CreateExercise)
	e.GetExercise = m(e.GetExercise)
	e.ListExercises = m(e.ListExercises)
	e.UpdateExercise = m(e.UpdateExercise)
	e.DeleteExercise = m(e.DeleteExercise)
	e.CreateTest = m(e.CreateTest)
	e.GetTestsByExercise = m(e.GetTestsByExercise)
	e.UpdateTest = m(e.UpdateTest)
	e.DeleteTest = m(e.DeleteTest)
	e.GetExerciseForStudent = m(e.GetExerciseForStudent)
	e.ListExercisesForStudents = m(e.ListExercisesForStudents)
	e.CreateAttempt = m(e.CreateAttempt)
	e.GetAttemptsByUserAndExercise = m(e.GetAttemptsByUserAndExercise)
	e.GetAnswerByUserAndExercise = m(e.GetAnswerByUserAndExercise)
}

// NewCreateExerciseEndpoint returns an endpoint function that calls the method
// "CreateExercise" of service "codelab".
func NewCreateExerciseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreateExercisePayload)
		return s.CreateExercise(ctx, p)
	}
}

// NewGetExerciseEndpoint returns an endpoint function that calls the method
// "GetExercise" of service "codelab".
func NewGetExerciseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetExercisePayload)
		return s.GetExercise(ctx, p)
	}
}

// NewListExercisesEndpoint returns an endpoint function that calls the method
// "ListExercises" of service "codelab".
func NewListExercisesEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ListExercisesPayload)
		return s.ListExercises(ctx, p)
	}
}

// NewUpdateExerciseEndpoint returns an endpoint function that calls the method
// "UpdateExercise" of service "codelab".
func NewUpdateExerciseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UpdateExercisePayload2)
		return s.UpdateExercise(ctx, p)
	}
}

// NewDeleteExerciseEndpoint returns an endpoint function that calls the method
// "DeleteExercise" of service "codelab".
func NewDeleteExerciseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteExercisePayload)
		return s.DeleteExercise(ctx, p)
	}
}

// NewCreateTestEndpoint returns an endpoint function that calls the method
// "CreateTest" of service "codelab".
func NewCreateTestEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreateTestPayload)
		return s.CreateTest(ctx, p)
	}
}

// NewGetTestsByExerciseEndpoint returns an endpoint function that calls the
// method "GetTestsByExercise" of service "codelab".
func NewGetTestsByExerciseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetTestsByExercisePayload)
		return s.GetTestsByExercise(ctx, p)
	}
}

// NewUpdateTestEndpoint returns an endpoint function that calls the method
// "UpdateTest" of service "codelab".
func NewUpdateTestEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UpdateTestPayload2)
		return s.UpdateTest(ctx, p)
	}
}

// NewDeleteTestEndpoint returns an endpoint function that calls the method
// "DeleteTest" of service "codelab".
func NewDeleteTestEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteTestPayload)
		return s.DeleteTest(ctx, p)
	}
}

// NewGetExerciseForStudentEndpoint returns an endpoint function that calls the
// method "GetExerciseForStudent" of service "codelab".
func NewGetExerciseForStudentEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetExerciseForStudentPayload)
		return s.GetExerciseForStudent(ctx, p)
	}
}

// NewListExercisesForStudentsEndpoint returns an endpoint function that calls
// the method "ListExercisesForStudents" of service "codelab".
func NewListExercisesForStudentsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ListExercisesForStudentsPayload)
		return s.ListExercisesForStudents(ctx, p)
	}
}

// NewCreateAttemptEndpoint returns an endpoint function that calls the method
// "CreateAttempt" of service "codelab".
func NewCreateAttemptEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreateAttemptPayload)
		return s.CreateAttempt(ctx, p)
	}
}

// NewGetAttemptsByUserAndExerciseEndpoint returns an endpoint function that
// calls the method "GetAttemptsByUserAndExercise" of service "codelab".
func NewGetAttemptsByUserAndExerciseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetAttemptsByUserAndExercisePayload)
		return s.GetAttemptsByUserAndExercise(ctx, p)
	}
}

// NewGetAnswerByUserAndExerciseEndpoint returns an endpoint function that
// calls the method "GetAnswerByUserAndExercise" of service "codelab".
func NewGetAnswerByUserAndExerciseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetAnswerByUserAndExercisePayload)
		return s.GetAnswerByUserAndExercise(ctx, p)
	}
}
