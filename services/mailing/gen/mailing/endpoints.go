// Code generated by goa v3.21.1, DO NOT EDIT.
//
// mailing endpoints
//
// Command:
// $ goa gen
// github.com/ynoacamino/infra-sustainable-classrooms/services/mailing/design/api
// -o ./services/mailing/

package mailing

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "mailing" service endpoints.
type Endpoints struct {
	SendEmail goa.Endpoint
}

// NewEndpoints wraps the methods of the "mailing" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		SendEmail: NewSendEmailEndpoint(s),
	}
}

// Use applies the given middleware to all the "mailing" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.SendEmail = m(e.SendEmail)
}

// NewSendEmailEndpoint returns an endpoint function that calls the method
// "SendEmail" of service "mailing".
func NewSendEmailEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*SendEmailPayload)
		return s.SendEmail(ctx, p)
	}
}
