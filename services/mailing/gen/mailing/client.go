// Code generated by goa v3.21.1, DO NOT EDIT.
//
// mailing client
//
// Command:
// $ goa gen
// github.com/ynoacamino/infra-sustainable-classrooms/services/mailing/design/api
// -o ./services/mailing/

package mailing

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "mailing" service client.
type Client struct {
	SendEmailEndpoint goa.Endpoint
}

// NewClient initializes a "mailing" service client given the endpoints.
func NewClient(sendEmail goa.Endpoint) *Client {
	return &Client{
		SendEmailEndpoint: sendEmail,
	}
}

// SendEmail calls the "SendEmail" endpoint of the "mailing" service.
// SendEmail may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "email_send_failed" (type EmailSendFailed)
//   - "smtp_connection_failed" (type SMTPConnectionFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - error: internal error
func (c *Client) SendEmail(ctx context.Context, p *SendEmailPayload) (res *EmailResponse, err error) {
	var ires any
	ires, err = c.SendEmailEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*EmailResponse), nil
}
