// Code generated by goa v3.21.1, DO NOT EDIT.
//
// knowledge-http HTTP client CLI support package
//
// Command:
// $ goa gen
// github.com/ynoacamino/infra-sustainable-classrooms/services/knowledge/design/api
// -o ./services/knowledge/

package cli

import (
	"flag"
	"fmt"
	"net/http"
	"os"

	knowledgec "github.com/ynoacamino/infra-sustainable-classrooms/services/knowledge/gen/http/knowledge/client"
	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// UsageCommands returns the set of commands and sub-commands using the format
//
//	command (subcommand1|subcommand2|...)
func UsageCommands() string {
	return `knowledge (create-test|get-my-tests|get-test-by-id|update-test|delete-test|get-test-questions|add-question|get-question-by-id|update-question|delete-question|get-available-tests|get-test-form|submit-test|get-my-submissions|get-submission-by-id|get-submission-result)
`
}

// UsageExamples produces an example of a valid invocation of the CLI tool.
func UsageExamples() string {
	return os.Args[0] + ` knowledge create-test --body '{
      "title": "Quia eaque qui officia."
   }' --session-token "Corporis inventore perferendis."` + "\n" +
		""
}

// ParseEndpoint returns the endpoint and payload as specified on the command
// line.
func ParseEndpoint(
	scheme, host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restore bool,
) (goa.Endpoint, any, error) {
	var (
		knowledgeFlags = flag.NewFlagSet("knowledge", flag.ContinueOnError)

		knowledgeCreateTestFlags            = flag.NewFlagSet("create-test", flag.ExitOnError)
		knowledgeCreateTestBodyFlag         = knowledgeCreateTestFlags.String("body", "REQUIRED", "")
		knowledgeCreateTestSessionTokenFlag = knowledgeCreateTestFlags.String("session-token", "REQUIRED", "")

		knowledgeGetMyTestsFlags            = flag.NewFlagSet("get-my-tests", flag.ExitOnError)
		knowledgeGetMyTestsSessionTokenFlag = knowledgeGetMyTestsFlags.String("session-token", "REQUIRED", "")

		knowledgeGetTestByIDFlags            = flag.NewFlagSet("get-test-by-id", flag.ExitOnError)
		knowledgeGetTestByIDTestIDFlag       = knowledgeGetTestByIDFlags.String("test-id", "REQUIRED", "Test ID")
		knowledgeGetTestByIDSessionTokenFlag = knowledgeGetTestByIDFlags.String("session-token", "REQUIRED", "")

		knowledgeUpdateTestFlags            = flag.NewFlagSet("update-test", flag.ExitOnError)
		knowledgeUpdateTestBodyFlag         = knowledgeUpdateTestFlags.String("body", "REQUIRED", "")
		knowledgeUpdateTestTestIDFlag       = knowledgeUpdateTestFlags.String("test-id", "REQUIRED", "Test ID")
		knowledgeUpdateTestSessionTokenFlag = knowledgeUpdateTestFlags.String("session-token", "REQUIRED", "")

		knowledgeDeleteTestFlags            = flag.NewFlagSet("delete-test", flag.ExitOnError)
		knowledgeDeleteTestTestIDFlag       = knowledgeDeleteTestFlags.String("test-id", "REQUIRED", "Test ID")
		knowledgeDeleteTestSessionTokenFlag = knowledgeDeleteTestFlags.String("session-token", "REQUIRED", "")

		knowledgeGetTestQuestionsFlags            = flag.NewFlagSet("get-test-questions", flag.ExitOnError)
		knowledgeGetTestQuestionsTestIDFlag       = knowledgeGetTestQuestionsFlags.String("test-id", "REQUIRED", "Test ID")
		knowledgeGetTestQuestionsSessionTokenFlag = knowledgeGetTestQuestionsFlags.String("session-token", "REQUIRED", "")

		knowledgeAddQuestionFlags            = flag.NewFlagSet("add-question", flag.ExitOnError)
		knowledgeAddQuestionBodyFlag         = knowledgeAddQuestionFlags.String("body", "REQUIRED", "")
		knowledgeAddQuestionTestIDFlag       = knowledgeAddQuestionFlags.String("test-id", "REQUIRED", "Test ID")
		knowledgeAddQuestionSessionTokenFlag = knowledgeAddQuestionFlags.String("session-token", "REQUIRED", "")

		knowledgeGetQuestionByIDFlags            = flag.NewFlagSet("get-question-by-id", flag.ExitOnError)
		knowledgeGetQuestionByIDTestIDFlag       = knowledgeGetQuestionByIDFlags.String("test-id", "REQUIRED", "Test ID")
		knowledgeGetQuestionByIDQuestionIDFlag   = knowledgeGetQuestionByIDFlags.String("question-id", "REQUIRED", "Question ID")
		knowledgeGetQuestionByIDSessionTokenFlag = knowledgeGetQuestionByIDFlags.String("session-token", "REQUIRED", "")

		knowledgeUpdateQuestionFlags            = flag.NewFlagSet("update-question", flag.ExitOnError)
		knowledgeUpdateQuestionBodyFlag         = knowledgeUpdateQuestionFlags.String("body", "REQUIRED", "")
		knowledgeUpdateQuestionTestIDFlag       = knowledgeUpdateQuestionFlags.String("test-id", "REQUIRED", "Test ID")
		knowledgeUpdateQuestionQuestionIDFlag   = knowledgeUpdateQuestionFlags.String("question-id", "REQUIRED", "Question ID")
		knowledgeUpdateQuestionSessionTokenFlag = knowledgeUpdateQuestionFlags.String("session-token", "REQUIRED", "")

		knowledgeDeleteQuestionFlags            = flag.NewFlagSet("delete-question", flag.ExitOnError)
		knowledgeDeleteQuestionTestIDFlag       = knowledgeDeleteQuestionFlags.String("test-id", "REQUIRED", "Test ID")
		knowledgeDeleteQuestionQuestionIDFlag   = knowledgeDeleteQuestionFlags.String("question-id", "REQUIRED", "Question ID")
		knowledgeDeleteQuestionSessionTokenFlag = knowledgeDeleteQuestionFlags.String("session-token", "REQUIRED", "")

		knowledgeGetAvailableTestsFlags            = flag.NewFlagSet("get-available-tests", flag.ExitOnError)
		knowledgeGetAvailableTestsSessionTokenFlag = knowledgeGetAvailableTestsFlags.String("session-token", "REQUIRED", "")

		knowledgeGetTestFormFlags            = flag.NewFlagSet("get-test-form", flag.ExitOnError)
		knowledgeGetTestFormTestIDFlag       = knowledgeGetTestFormFlags.String("test-id", "REQUIRED", "Test ID")
		knowledgeGetTestFormSessionTokenFlag = knowledgeGetTestFormFlags.String("session-token", "REQUIRED", "")

		knowledgeSubmitTestFlags            = flag.NewFlagSet("submit-test", flag.ExitOnError)
		knowledgeSubmitTestBodyFlag         = knowledgeSubmitTestFlags.String("body", "REQUIRED", "")
		knowledgeSubmitTestTestIDFlag       = knowledgeSubmitTestFlags.String("test-id", "REQUIRED", "Test ID")
		knowledgeSubmitTestSessionTokenFlag = knowledgeSubmitTestFlags.String("session-token", "REQUIRED", "")

		knowledgeGetMySubmissionsFlags            = flag.NewFlagSet("get-my-submissions", flag.ExitOnError)
		knowledgeGetMySubmissionsSessionTokenFlag = knowledgeGetMySubmissionsFlags.String("session-token", "REQUIRED", "")

		knowledgeGetSubmissionByIDFlags            = flag.NewFlagSet("get-submission-by-id", flag.ExitOnError)
		knowledgeGetSubmissionByIDSubmissionIDFlag = knowledgeGetSubmissionByIDFlags.String("submission-id", "REQUIRED", "Submission ID")
		knowledgeGetSubmissionByIDSessionTokenFlag = knowledgeGetSubmissionByIDFlags.String("session-token", "REQUIRED", "")

		knowledgeGetSubmissionResultFlags            = flag.NewFlagSet("get-submission-result", flag.ExitOnError)
		knowledgeGetSubmissionResultSubmissionIDFlag = knowledgeGetSubmissionResultFlags.String("submission-id", "REQUIRED", "Submission ID")
		knowledgeGetSubmissionResultSessionTokenFlag = knowledgeGetSubmissionResultFlags.String("session-token", "REQUIRED", "")
	)
	knowledgeFlags.Usage = knowledgeUsage
	knowledgeCreateTestFlags.Usage = knowledgeCreateTestUsage
	knowledgeGetMyTestsFlags.Usage = knowledgeGetMyTestsUsage
	knowledgeGetTestByIDFlags.Usage = knowledgeGetTestByIDUsage
	knowledgeUpdateTestFlags.Usage = knowledgeUpdateTestUsage
	knowledgeDeleteTestFlags.Usage = knowledgeDeleteTestUsage
	knowledgeGetTestQuestionsFlags.Usage = knowledgeGetTestQuestionsUsage
	knowledgeAddQuestionFlags.Usage = knowledgeAddQuestionUsage
	knowledgeGetQuestionByIDFlags.Usage = knowledgeGetQuestionByIDUsage
	knowledgeUpdateQuestionFlags.Usage = knowledgeUpdateQuestionUsage
	knowledgeDeleteQuestionFlags.Usage = knowledgeDeleteQuestionUsage
	knowledgeGetAvailableTestsFlags.Usage = knowledgeGetAvailableTestsUsage
	knowledgeGetTestFormFlags.Usage = knowledgeGetTestFormUsage
	knowledgeSubmitTestFlags.Usage = knowledgeSubmitTestUsage
	knowledgeGetMySubmissionsFlags.Usage = knowledgeGetMySubmissionsUsage
	knowledgeGetSubmissionByIDFlags.Usage = knowledgeGetSubmissionByIDUsage
	knowledgeGetSubmissionResultFlags.Usage = knowledgeGetSubmissionResultUsage

	if err := flag.CommandLine.Parse(os.Args[1:]); err != nil {
		return nil, nil, err
	}

	if flag.NArg() < 2 { // two non flag args are required: SERVICE and ENDPOINT (aka COMMAND)
		return nil, nil, fmt.Errorf("not enough arguments")
	}

	var (
		svcn string
		svcf *flag.FlagSet
	)
	{
		svcn = flag.Arg(0)
		switch svcn {
		case "knowledge":
			svcf = knowledgeFlags
		default:
			return nil, nil, fmt.Errorf("unknown service %q", svcn)
		}
	}
	if err := svcf.Parse(flag.Args()[1:]); err != nil {
		return nil, nil, err
	}

	var (
		epn string
		epf *flag.FlagSet
	)
	{
		epn = svcf.Arg(0)
		switch svcn {
		case "knowledge":
			switch epn {
			case "create-test":
				epf = knowledgeCreateTestFlags

			case "get-my-tests":
				epf = knowledgeGetMyTestsFlags

			case "get-test-by-id":
				epf = knowledgeGetTestByIDFlags

			case "update-test":
				epf = knowledgeUpdateTestFlags

			case "delete-test":
				epf = knowledgeDeleteTestFlags

			case "get-test-questions":
				epf = knowledgeGetTestQuestionsFlags

			case "add-question":
				epf = knowledgeAddQuestionFlags

			case "get-question-by-id":
				epf = knowledgeGetQuestionByIDFlags

			case "update-question":
				epf = knowledgeUpdateQuestionFlags

			case "delete-question":
				epf = knowledgeDeleteQuestionFlags

			case "get-available-tests":
				epf = knowledgeGetAvailableTestsFlags

			case "get-test-form":
				epf = knowledgeGetTestFormFlags

			case "submit-test":
				epf = knowledgeSubmitTestFlags

			case "get-my-submissions":
				epf = knowledgeGetMySubmissionsFlags

			case "get-submission-by-id":
				epf = knowledgeGetSubmissionByIDFlags

			case "get-submission-result":
				epf = knowledgeGetSubmissionResultFlags

			}

		}
	}
	if epf == nil {
		return nil, nil, fmt.Errorf("unknown %q endpoint %q", svcn, epn)
	}

	// Parse endpoint flags if any
	if svcf.NArg() > 1 {
		if err := epf.Parse(svcf.Args()[1:]); err != nil {
			return nil, nil, err
		}
	}

	var (
		data     any
		endpoint goa.Endpoint
		err      error
	)
	{
		switch svcn {
		case "knowledge":
			c := knowledgec.NewClient(scheme, host, doer, enc, dec, restore)
			switch epn {
			case "create-test":
				endpoint = c.CreateTest()
				data, err = knowledgec.BuildCreateTestPayload(*knowledgeCreateTestBodyFlag, *knowledgeCreateTestSessionTokenFlag)
			case "get-my-tests":
				endpoint = c.GetMyTests()
				data, err = knowledgec.BuildGetMyTestsPayload(*knowledgeGetMyTestsSessionTokenFlag)
			case "get-test-by-id":
				endpoint = c.GetTestByID()
				data, err = knowledgec.BuildGetTestByIDPayload(*knowledgeGetTestByIDTestIDFlag, *knowledgeGetTestByIDSessionTokenFlag)
			case "update-test":
				endpoint = c.UpdateTest()
				data, err = knowledgec.BuildUpdateTestPayload(*knowledgeUpdateTestBodyFlag, *knowledgeUpdateTestTestIDFlag, *knowledgeUpdateTestSessionTokenFlag)
			case "delete-test":
				endpoint = c.DeleteTest()
				data, err = knowledgec.BuildDeleteTestPayload(*knowledgeDeleteTestTestIDFlag, *knowledgeDeleteTestSessionTokenFlag)
			case "get-test-questions":
				endpoint = c.GetTestQuestions()
				data, err = knowledgec.BuildGetTestQuestionsPayload(*knowledgeGetTestQuestionsTestIDFlag, *knowledgeGetTestQuestionsSessionTokenFlag)
			case "add-question":
				endpoint = c.AddQuestion()
				data, err = knowledgec.BuildAddQuestionPayload(*knowledgeAddQuestionBodyFlag, *knowledgeAddQuestionTestIDFlag, *knowledgeAddQuestionSessionTokenFlag)
			case "get-question-by-id":
				endpoint = c.GetQuestionByID()
				data, err = knowledgec.BuildGetQuestionByIDPayload(*knowledgeGetQuestionByIDTestIDFlag, *knowledgeGetQuestionByIDQuestionIDFlag, *knowledgeGetQuestionByIDSessionTokenFlag)
			case "update-question":
				endpoint = c.UpdateQuestion()
				data, err = knowledgec.BuildUpdateQuestionPayload(*knowledgeUpdateQuestionBodyFlag, *knowledgeUpdateQuestionTestIDFlag, *knowledgeUpdateQuestionQuestionIDFlag, *knowledgeUpdateQuestionSessionTokenFlag)
			case "delete-question":
				endpoint = c.DeleteQuestion()
				data, err = knowledgec.BuildDeleteQuestionPayload(*knowledgeDeleteQuestionTestIDFlag, *knowledgeDeleteQuestionQuestionIDFlag, *knowledgeDeleteQuestionSessionTokenFlag)
			case "get-available-tests":
				endpoint = c.GetAvailableTests()
				data, err = knowledgec.BuildGetAvailableTestsPayload(*knowledgeGetAvailableTestsSessionTokenFlag)
			case "get-test-form":
				endpoint = c.GetTestForm()
				data, err = knowledgec.BuildGetTestFormPayload(*knowledgeGetTestFormTestIDFlag, *knowledgeGetTestFormSessionTokenFlag)
			case "submit-test":
				endpoint = c.SubmitTest()
				data, err = knowledgec.BuildSubmitTestPayload(*knowledgeSubmitTestBodyFlag, *knowledgeSubmitTestTestIDFlag, *knowledgeSubmitTestSessionTokenFlag)
			case "get-my-submissions":
				endpoint = c.GetMySubmissions()
				data, err = knowledgec.BuildGetMySubmissionsPayload(*knowledgeGetMySubmissionsSessionTokenFlag)
			case "get-submission-by-id":
				endpoint = c.GetSubmissionByID()
				data, err = knowledgec.BuildGetSubmissionByIDPayload(*knowledgeGetSubmissionByIDSubmissionIDFlag, *knowledgeGetSubmissionByIDSessionTokenFlag)
			case "get-submission-result":
				endpoint = c.GetSubmissionResult()
				data, err = knowledgec.BuildGetSubmissionResultPayload(*knowledgeGetSubmissionResultSubmissionIDFlag, *knowledgeGetSubmissionResultSessionTokenFlag)
			}
		}
	}
	if err != nil {
		return nil, nil, err
	}

	return endpoint, data, nil
}

// knowledgeUsage displays the usage of the knowledge command and its
// subcommands.
func knowledgeUsage() {
	fmt.Fprintf(os.Stderr, `Knowledge microservice for simple test forms
Usage:
    %[1]s [globalflags] knowledge COMMAND [flags]

COMMAND:
    create-test: Create a new test form
    get-my-tests: Get my created tests
    get-test-by-id: Get a test by ID
    update-test: Update test title
    delete-test: Delete a test
    get-test-questions: Get questions for a test
    add-question: Add a question to a test
    get-question-by-id: Get a question by ID
    update-question: Update a question
    delete-question: Delete a question
    get-available-tests: Get available tests for students
    get-test-form: Get test form for taking
    submit-test: Submit test answers
    get-my-submissions: Get my test submissions
    get-submission-by-id: Get a submission by ID
    get-submission-result: Get detailed submission result

Additional help:
    %[1]s knowledge COMMAND --help
`, os.Args[0])
}
func knowledgeCreateTestUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge create-test -body JSON -session-token STRING

Create a new test form
    -body JSON: 
    -session-token STRING: 

Example:
    %[1]s knowledge create-test --body '{
      "title": "Quia eaque qui officia."
   }' --session-token "Corporis inventore perferendis."
`, os.Args[0])
}

func knowledgeGetMyTestsUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge get-my-tests -session-token STRING

Get my created tests
    -session-token STRING: 

Example:
    %[1]s knowledge get-my-tests --session-token "Nihil molestias et."
`, os.Args[0])
}

func knowledgeGetTestByIDUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge get-test-by-id -test-id INT64 -session-token STRING

Get a test by ID
    -test-id INT64: Test ID
    -session-token STRING: 

Example:
    %[1]s knowledge get-test-by-id --test-id 4436154052070521967 --session-token "Facilis eum incidunt ad et."
`, os.Args[0])
}

func knowledgeUpdateTestUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge update-test -body JSON -test-id INT64 -session-token STRING

Update test title
    -body JSON: 
    -test-id INT64: Test ID
    -session-token STRING: 

Example:
    %[1]s knowledge update-test --body '{
      "title": "Tenetur id maiores debitis at aperiam reiciendis."
   }' --test-id 5573552492505036084 --session-token "Vero porro quaerat doloribus eius rerum est."
`, os.Args[0])
}

func knowledgeDeleteTestUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge delete-test -test-id INT64 -session-token STRING

Delete a test
    -test-id INT64: Test ID
    -session-token STRING: 

Example:
    %[1]s knowledge delete-test --test-id 950464656488258168 --session-token "Quia repellat esse voluptatem necessitatibus."
`, os.Args[0])
}

func knowledgeGetTestQuestionsUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge get-test-questions -test-id INT64 -session-token STRING

Get questions for a test
    -test-id INT64: Test ID
    -session-token STRING: 

Example:
    %[1]s knowledge get-test-questions --test-id 4823614619145999819 --session-token "Sunt cum laudantium sit."
`, os.Args[0])
}

func knowledgeAddQuestionUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge add-question -body JSON -test-id INT64 -session-token STRING

Add a question to a test
    -body JSON: 
    -test-id INT64: Test ID
    -session-token STRING: 

Example:
    %[1]s knowledge add-question --body '{
      "correct_answer": 5237011504810502332,
      "option_a": "Dolores iusto sit fuga.",
      "option_b": "Aliquam et totam aliquid aut optio.",
      "option_c": "Libero quis sint.",
      "option_d": "Magni nihil.",
      "question_text": "Ducimus quia fugiat fuga molestiae accusantium amet."
   }' --test-id 1014521382646075800 --session-token "Vitae odio quis vel."
`, os.Args[0])
}

func knowledgeGetQuestionByIDUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge get-question-by-id -test-id INT64 -question-id INT64 -session-token STRING

Get a question by ID
    -test-id INT64: Test ID
    -question-id INT64: Question ID
    -session-token STRING: 

Example:
    %[1]s knowledge get-question-by-id --test-id 4777821089179222314 --question-id 573487563850651286 --session-token "Rerum et ipsa qui dolorem et."
`, os.Args[0])
}

func knowledgeUpdateQuestionUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge update-question -body JSON -test-id INT64 -question-id INT64 -session-token STRING

Update a question
    -body JSON: 
    -test-id INT64: Test ID
    -question-id INT64: Question ID
    -session-token STRING: 

Example:
    %[1]s knowledge update-question --body '{
      "correct_answer": 5497856277076629409,
      "option_a": "Sunt quidem vel enim.",
      "option_b": "Ducimus deserunt fuga.",
      "option_c": "Adipisci occaecati vel dolorum aut dolore.",
      "option_d": "Fuga alias veniam.",
      "question_text": "Et quis neque omnis enim et."
   }' --test-id 2107802249804250201 --question-id 62667417625230853 --session-token "Eos delectus voluptatum dignissimos."
`, os.Args[0])
}

func knowledgeDeleteQuestionUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge delete-question -test-id INT64 -question-id INT64 -session-token STRING

Delete a question
    -test-id INT64: Test ID
    -question-id INT64: Question ID
    -session-token STRING: 

Example:
    %[1]s knowledge delete-question --test-id 2402815448165623977 --question-id 841615088860982762 --session-token "Qui quas est."
`, os.Args[0])
}

func knowledgeGetAvailableTestsUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge get-available-tests -session-token STRING

Get available tests for students
    -session-token STRING: 

Example:
    %[1]s knowledge get-available-tests --session-token "Modi qui."
`, os.Args[0])
}

func knowledgeGetTestFormUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge get-test-form -test-id INT64 -session-token STRING

Get test form for taking
    -test-id INT64: Test ID
    -session-token STRING: 

Example:
    %[1]s knowledge get-test-form --test-id 139387877286796641 --session-token "Dolor ut consequatur sint."
`, os.Args[0])
}

func knowledgeSubmitTestUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge submit-test -body JSON -test-id INT64 -session-token STRING

Submit test answers
    -body JSON: 
    -test-id INT64: Test ID
    -session-token STRING: 

Example:
    %[1]s knowledge submit-test --body '{
      "answers": [
         {
            "question_id": 4096248363570844082,
            "selected_answer": 3700718689874649655
         },
         {
            "question_id": 4096248363570844082,
            "selected_answer": 3700718689874649655
         },
         {
            "question_id": 4096248363570844082,
            "selected_answer": 3700718689874649655
         },
         {
            "question_id": 4096248363570844082,
            "selected_answer": 3700718689874649655
         }
      ]
   }' --test-id 5179380141281466925 --session-token "Deleniti quia quo et dolorem nostrum."
`, os.Args[0])
}

func knowledgeGetMySubmissionsUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge get-my-submissions -session-token STRING

Get my test submissions
    -session-token STRING: 

Example:
    %[1]s knowledge get-my-submissions --session-token "Voluptatem dolor quasi eum eveniet."
`, os.Args[0])
}

func knowledgeGetSubmissionByIDUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge get-submission-by-id -submission-id INT64 -session-token STRING

Get a submission by ID
    -submission-id INT64: Submission ID
    -session-token STRING: 

Example:
    %[1]s knowledge get-submission-by-id --submission-id 7915203422341276603 --session-token "Veritatis et iure culpa et."
`, os.Args[0])
}

func knowledgeGetSubmissionResultUsage() {
	fmt.Fprintf(os.Stderr, `%[1]s [flags] knowledge get-submission-result -submission-id INT64 -session-token STRING

Get detailed submission result
    -submission-id INT64: Submission ID
    -session-token STRING: 

Example:
    %[1]s knowledge get-submission-result --submission-id 52667249506286983 --session-token "Rerum consequatur qui delectus et nostrum."
`, os.Args[0])
}
