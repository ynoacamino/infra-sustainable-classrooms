// Code generated by goa v3.21.1, DO NOT EDIT.
//
// knowledge client
//
// Command:
// $ goa gen
// github.com/ynoacamino/infra-sustainable-classrooms/services/knowledge/design/api
// -o ./services/knowledge/

package knowledge

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "knowledge" service client.
type Client struct {
	CreateTestEndpoint          goa.Endpoint
	GetMyTestsEndpoint          goa.Endpoint
	GetTestByIDEndpoint         goa.Endpoint
	UpdateTestEndpoint          goa.Endpoint
	DeleteTestEndpoint          goa.Endpoint
	GetTestQuestionsEndpoint    goa.Endpoint
	AddQuestionEndpoint         goa.Endpoint
	GetQuestionByIDEndpoint     goa.Endpoint
	UpdateQuestionEndpoint      goa.Endpoint
	DeleteQuestionEndpoint      goa.Endpoint
	GetAvailableTestsEndpoint   goa.Endpoint
	GetTestFormEndpoint         goa.Endpoint
	SubmitTestEndpoint          goa.Endpoint
	GetMySubmissionsEndpoint    goa.Endpoint
	GetSubmissionByIDEndpoint   goa.Endpoint
	GetSubmissionResultEndpoint goa.Endpoint
}

// NewClient initializes a "knowledge" service client given the endpoints.
func NewClient(createTest, getMyTests, getTestByID, updateTest, deleteTest, getTestQuestions, addQuestion, getQuestionByID, updateQuestion, deleteQuestion, getAvailableTests, getTestForm, submitTest, getMySubmissions, getSubmissionByID, getSubmissionResult goa.Endpoint) *Client {
	return &Client{
		CreateTestEndpoint:          createTest,
		GetMyTestsEndpoint:          getMyTests,
		GetTestByIDEndpoint:         getTestByID,
		UpdateTestEndpoint:          updateTest,
		DeleteTestEndpoint:          deleteTest,
		GetTestQuestionsEndpoint:    getTestQuestions,
		AddQuestionEndpoint:         addQuestion,
		GetQuestionByIDEndpoint:     getQuestionByID,
		UpdateQuestionEndpoint:      updateQuestion,
		DeleteQuestionEndpoint:      deleteQuestion,
		GetAvailableTestsEndpoint:   getAvailableTests,
		GetTestFormEndpoint:         getTestForm,
		SubmitTestEndpoint:          submitTest,
		GetMySubmissionsEndpoint:    getMySubmissions,
		GetSubmissionByIDEndpoint:   getSubmissionByID,
		GetSubmissionResultEndpoint: getSubmissionResult,
	}
}

// CreateTest calls the "CreateTest" endpoint of the "knowledge" service.
// CreateTest may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) CreateTest(ctx context.Context, p *CreateTestPayload) (res *SimpleResponse, err error) {
	var ires any
	ires, err = c.CreateTestEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SimpleResponse), nil
}

// GetMyTests calls the "GetMyTests" endpoint of the "knowledge" service.
// GetMyTests may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) GetMyTests(ctx context.Context, p *GetMyTestsPayload) (res *TestsResponse, err error) {
	var ires any
	ires, err = c.GetMyTestsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*TestsResponse), nil
}

// GetTestByID calls the "GetTestById" endpoint of the "knowledge" service.
// GetTestByID may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) GetTestByID(ctx context.Context, p *GetTestByIDPayload) (res *TestResponse, err error) {
	var ires any
	ires, err = c.GetTestByIDEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*TestResponse), nil
}

// UpdateTest calls the "UpdateTest" endpoint of the "knowledge" service.
// UpdateTest may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) UpdateTest(ctx context.Context, p *UpdateTestPayload) (res *SimpleResponse, err error) {
	var ires any
	ires, err = c.UpdateTestEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SimpleResponse), nil
}

// DeleteTest calls the "DeleteTest" endpoint of the "knowledge" service.
// DeleteTest may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) DeleteTest(ctx context.Context, p *DeleteTestPayload) (res *SimpleResponse, err error) {
	var ires any
	ires, err = c.DeleteTestEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SimpleResponse), nil
}

// GetTestQuestions calls the "GetTestQuestions" endpoint of the "knowledge"
// service.
// GetTestQuestions may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) GetTestQuestions(ctx context.Context, p *GetTestQuestionsPayload) (res *QuestionsResponse, err error) {
	var ires any
	ires, err = c.GetTestQuestionsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*QuestionsResponse), nil
}

// AddQuestion calls the "AddQuestion" endpoint of the "knowledge" service.
// AddQuestion may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) AddQuestion(ctx context.Context, p *AddQuestionPayload) (res *SimpleResponse, err error) {
	var ires any
	ires, err = c.AddQuestionEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SimpleResponse), nil
}

// GetQuestionByID calls the "GetQuestionById" endpoint of the "knowledge"
// service.
// GetQuestionByID may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) GetQuestionByID(ctx context.Context, p *GetQuestionByIDPayload) (res *QuestionResponse, err error) {
	var ires any
	ires, err = c.GetQuestionByIDEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*QuestionResponse), nil
}

// UpdateQuestion calls the "UpdateQuestion" endpoint of the "knowledge"
// service.
// UpdateQuestion may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) UpdateQuestion(ctx context.Context, p *UpdateQuestionPayload) (res *SimpleResponse, err error) {
	var ires any
	ires, err = c.UpdateQuestionEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SimpleResponse), nil
}

// DeleteQuestion calls the "DeleteQuestion" endpoint of the "knowledge"
// service.
// DeleteQuestion may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) DeleteQuestion(ctx context.Context, p *DeleteQuestionPayload) (res *SimpleResponse, err error) {
	var ires any
	ires, err = c.DeleteQuestionEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SimpleResponse), nil
}

// GetAvailableTests calls the "GetAvailableTests" endpoint of the "knowledge"
// service.
// GetAvailableTests may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) GetAvailableTests(ctx context.Context, p *GetAvailableTestsPayload) (res *TestsResponse, err error) {
	var ires any
	ires, err = c.GetAvailableTestsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*TestsResponse), nil
}

// GetTestForm calls the "GetTestForm" endpoint of the "knowledge" service.
// GetTestForm may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) GetTestForm(ctx context.Context, p *GetTestFormPayload) (res *FormResponse, err error) {
	var ires any
	ires, err = c.GetTestFormEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*FormResponse), nil
}

// SubmitTest calls the "SubmitTest" endpoint of the "knowledge" service.
// SubmitTest may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) SubmitTest(ctx context.Context, p *SubmitTestPayload) (res *SubmitResponse, err error) {
	var ires any
	ires, err = c.SubmitTestEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SubmitResponse), nil
}

// GetMySubmissions calls the "GetMySubmissions" endpoint of the "knowledge"
// service.
// GetMySubmissions may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) GetMySubmissions(ctx context.Context, p *GetMySubmissionsPayload) (res *SubmissionsResponse, err error) {
	var ires any
	ires, err = c.GetMySubmissionsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SubmissionsResponse), nil
}

// GetSubmissionByID calls the "GetSubmissionById" endpoint of the "knowledge"
// service.
// GetSubmissionByID may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) GetSubmissionByID(ctx context.Context, p *GetSubmissionByIDPayload) (res *SubmissionResponse, err error) {
	var ires any
	ires, err = c.GetSubmissionByIDEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SubmissionResponse), nil
}

// GetSubmissionResult calls the "GetSubmissionResult" endpoint of the
// "knowledge" service.
// GetSubmissionResult may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "test_not_found" (type TestNotFound)
//   - "question_not_found" (type QuestionNotFound)
//   - "submission_not_found" (type SubmissionNotFound)
//   - "test_already_submitted" (type TestAlreadySubmitted)
//   - "invalid_input" (type InvalidInput)
//   - error: internal error
func (c *Client) GetSubmissionResult(ctx context.Context, p *GetSubmissionResultPayload) (res *SubmissionResult, err error) {
	var ires any
	ires, err = c.GetSubmissionResultEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SubmissionResult), nil
}
