// Code generated by goa v3.21.1, DO NOT EDIT.
//
// text endpoints
//
// Command:
// $ goa gen
// github.com/ynoacamino/infra-sustainable-classrooms/services/text/design/api
// -o ./services/text/

package text

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "text" service endpoints.
type Endpoints struct {
	CreateCourse  goa.Endpoint
	GetCourse     goa.Endpoint
	ListCourses   goa.Endpoint
	DeleteCourse  goa.Endpoint
	UpdateCourse  goa.Endpoint
	CreateSection goa.Endpoint
	GetSection    goa.Endpoint
	ListSections  goa.Endpoint
	UpdateSection goa.Endpoint
	DeleteSection goa.Endpoint
	CreateArticle goa.Endpoint
	GetArticle    goa.Endpoint
	ListArticles  goa.Endpoint
	UpdateArticle goa.Endpoint
	DeleteArticle goa.Endpoint
}

// NewEndpoints wraps the methods of the "text" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		CreateCourse:  NewCreateCourseEndpoint(s),
		GetCourse:     NewGetCourseEndpoint(s),
		ListCourses:   NewListCoursesEndpoint(s),
		DeleteCourse:  NewDeleteCourseEndpoint(s),
		UpdateCourse:  NewUpdateCourseEndpoint(s),
		CreateSection: NewCreateSectionEndpoint(s),
		GetSection:    NewGetSectionEndpoint(s),
		ListSections:  NewListSectionsEndpoint(s),
		UpdateSection: NewUpdateSectionEndpoint(s),
		DeleteSection: NewDeleteSectionEndpoint(s),
		CreateArticle: NewCreateArticleEndpoint(s),
		GetArticle:    NewGetArticleEndpoint(s),
		ListArticles:  NewListArticlesEndpoint(s),
		UpdateArticle: NewUpdateArticleEndpoint(s),
		DeleteArticle: NewDeleteArticleEndpoint(s),
	}
}

// Use applies the given middleware to all the "text" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.CreateCourse = m(e.CreateCourse)
	e.GetCourse = m(e.GetCourse)
	e.ListCourses = m(e.ListCourses)
	e.DeleteCourse = m(e.DeleteCourse)
	e.UpdateCourse = m(e.UpdateCourse)
	e.CreateSection = m(e.CreateSection)
	e.GetSection = m(e.GetSection)
	e.ListSections = m(e.ListSections)
	e.UpdateSection = m(e.UpdateSection)
	e.DeleteSection = m(e.DeleteSection)
	e.CreateArticle = m(e.CreateArticle)
	e.GetArticle = m(e.GetArticle)
	e.ListArticles = m(e.ListArticles)
	e.UpdateArticle = m(e.UpdateArticle)
	e.DeleteArticle = m(e.DeleteArticle)
}

// NewCreateCourseEndpoint returns an endpoint function that calls the method
// "CreateCourse" of service "text".
func NewCreateCourseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreateCoursePayload)
		return s.CreateCourse(ctx, p)
	}
}

// NewGetCourseEndpoint returns an endpoint function that calls the method
// "GetCourse" of service "text".
func NewGetCourseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetCoursePayload)
		return s.GetCourse(ctx, p)
	}
}

// NewListCoursesEndpoint returns an endpoint function that calls the method
// "ListCourses" of service "text".
func NewListCoursesEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ListCoursesPayload)
		return s.ListCourses(ctx, p)
	}
}

// NewDeleteCourseEndpoint returns an endpoint function that calls the method
// "DeleteCourse" of service "text".
func NewDeleteCourseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteCoursePayload)
		return s.DeleteCourse(ctx, p)
	}
}

// NewUpdateCourseEndpoint returns an endpoint function that calls the method
// "UpdateCourse" of service "text".
func NewUpdateCourseEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UpdateCoursePayload)
		return s.UpdateCourse(ctx, p)
	}
}

// NewCreateSectionEndpoint returns an endpoint function that calls the method
// "CreateSection" of service "text".
func NewCreateSectionEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreateSectionPayload)
		return s.CreateSection(ctx, p)
	}
}

// NewGetSectionEndpoint returns an endpoint function that calls the method
// "GetSection" of service "text".
func NewGetSectionEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetSectionPayload)
		return s.GetSection(ctx, p)
	}
}

// NewListSectionsEndpoint returns an endpoint function that calls the method
// "ListSections" of service "text".
func NewListSectionsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ListSectionsPayload)
		return s.ListSections(ctx, p)
	}
}

// NewUpdateSectionEndpoint returns an endpoint function that calls the method
// "UpdateSection" of service "text".
func NewUpdateSectionEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UpdateSectionPayload)
		return s.UpdateSection(ctx, p)
	}
}

// NewDeleteSectionEndpoint returns an endpoint function that calls the method
// "DeleteSection" of service "text".
func NewDeleteSectionEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteSectionPayload)
		return s.DeleteSection(ctx, p)
	}
}

// NewCreateArticleEndpoint returns an endpoint function that calls the method
// "CreateArticle" of service "text".
func NewCreateArticleEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreateArticlePayload)
		return s.CreateArticle(ctx, p)
	}
}

// NewGetArticleEndpoint returns an endpoint function that calls the method
// "GetArticle" of service "text".
func NewGetArticleEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetArticlePayload)
		return s.GetArticle(ctx, p)
	}
}

// NewListArticlesEndpoint returns an endpoint function that calls the method
// "ListArticles" of service "text".
func NewListArticlesEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ListArticlesPayload)
		return s.ListArticles(ctx, p)
	}
}

// NewUpdateArticleEndpoint returns an endpoint function that calls the method
// "UpdateArticle" of service "text".
func NewUpdateArticleEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UpdateArticlePayload)
		return s.UpdateArticle(ctx, p)
	}
}

// NewDeleteArticleEndpoint returns an endpoint function that calls the method
// "DeleteArticle" of service "text".
func NewDeleteArticleEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteArticlePayload)
		return s.DeleteArticle(ctx, p)
	}
}
