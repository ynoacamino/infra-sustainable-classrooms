// Code generated with goa v3.21.1, DO NOT EDIT.
//
// text protocol buffer definition
//
// Command:
// $ goa gen
// github.com/ynoacamino/infra-sustainable-classrooms/services/text/design/api
// -o ./services/text/

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: goagen_text_text.proto

package textpb

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

// TextClient is the client API for Text service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Course management service for text-based learning, with sections and
// articles. Only teachers can create, update, or delete content. All endpoints
// require session_token via cookie.
type TextClient interface {
}

type textClient struct {
	cc grpc.ClientConnInterface
}

func NewTextClient(cc grpc.ClientConnInterface) TextClient {
	return &textClient{cc}
}

// TextServer is the server API for Text service.
// All implementations must embed UnimplementedTextServer
// for forward compatibility.
//
// Course management service for text-based learning, with sections and
// articles. Only teachers can create, update, or delete content. All endpoints
// require session_token via cookie.
type TextServer interface {
	mustEmbedUnimplementedTextServer()
}

// UnimplementedTextServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedTextServer struct{}

func (UnimplementedTextServer) mustEmbedUnimplementedTextServer() {}
func (UnimplementedTextServer) testEmbeddedByValue()              {}

// UnsafeTextServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TextServer will
// result in compilation errors.
type UnsafeTextServer interface {
	mustEmbedUnimplementedTextServer()
}

func RegisterTextServer(s grpc.ServiceRegistrar, srv TextServer) {
	// If the following call pancis, it indicates UnimplementedTextServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&Text_ServiceDesc, srv)
}

// Text_ServiceDesc is the grpc.ServiceDesc for Text service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Text_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "text.Text",
	HandlerType: (*TextServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "goagen_text_text.proto",
}
