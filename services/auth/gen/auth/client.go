// Code generated by goa v3.21.1, DO NOT EDIT.
//
// auth client
//
// Command:
// $ goa gen
// github.com/ynoacamino/infra-sustainable-classrooms/services/auth/design/api
// -o ./services/auth/

package auth

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "auth" service client.
type Client struct {
	GenerateSecretEndpoint   goa.Endpoint
	VerifyTOTPEndpoint       goa.Endpoint
	VerifyBackupCodeEndpoint goa.Endpoint
	RefreshSessionEndpoint   goa.Endpoint
	ValidateUserEndpoint     goa.Endpoint
	GetUserByIDEndpoint      goa.Endpoint
	LogoutEndpoint           goa.Endpoint
	GetUserProfileEndpoint   goa.Endpoint
}

// NewClient initializes a "auth" service client given the endpoints.
func NewClient(generateSecret, verifyTOTP, verifyBackupCode, refreshSession, validateUser, getUserByID, logout, getUserProfile goa.Endpoint) *Client {
	return &Client{
		GenerateSecretEndpoint:   generateSecret,
		VerifyTOTPEndpoint:       verifyTOTP,
		VerifyBackupCodeEndpoint: verifyBackupCode,
		RefreshSessionEndpoint:   refreshSession,
		ValidateUserEndpoint:     validateUser,
		GetUserByIDEndpoint:      getUserByID,
		LogoutEndpoint:           logout,
		GetUserProfileEndpoint:   getUserProfile,
	}
}

// GenerateSecret calls the "GenerateSecret" endpoint of the "auth" service.
// GenerateSecret may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "rate_limited" (type RateLimited)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_otp" (type InvalidOtp)
//   - "user_not_found" (type UserNotFound)
//   - "unauthorized" (type Unauthorized)
//   - error: internal error
func (c *Client) GenerateSecret(ctx context.Context, p *GenerateSecretPayload) (res *TOTPSecret, err error) {
	var ires any
	ires, err = c.GenerateSecretEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*TOTPSecret), nil
}

// VerifyTOTP calls the "VerifyTOTP" endpoint of the "auth" service.
// VerifyTOTP may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "rate_limited" (type RateLimited)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_otp" (type InvalidOtp)
//   - "user_not_found" (type UserNotFound)
//   - "unauthorized" (type Unauthorized)
//   - error: internal error
func (c *Client) VerifyTOTP(ctx context.Context, p *VerifyTOTPPayload) (res *AuthResponse, err error) {
	var ires any
	ires, err = c.VerifyTOTPEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AuthResponse), nil
}

// VerifyBackupCode calls the "VerifyBackupCode" endpoint of the "auth" service.
// VerifyBackupCode may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "rate_limited" (type RateLimited)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_otp" (type InvalidOtp)
//   - "user_not_found" (type UserNotFound)
//   - "unauthorized" (type Unauthorized)
//   - error: internal error
func (c *Client) VerifyBackupCode(ctx context.Context, p *VerifyBackupCodePayload) (res *BackupCodeResponse, err error) {
	var ires any
	ires, err = c.VerifyBackupCodeEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*BackupCodeResponse), nil
}

// RefreshSession calls the "RefreshSession" endpoint of the "auth" service.
// RefreshSession may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "rate_limited" (type RateLimited)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_otp" (type InvalidOtp)
//   - "user_not_found" (type UserNotFound)
//   - "unauthorized" (type Unauthorized)
//   - error: internal error
func (c *Client) RefreshSession(ctx context.Context, p *RefreshSessionPayload) (res *SimpleResponse, err error) {
	var ires any
	ires, err = c.RefreshSessionEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SimpleResponse), nil
}

// ValidateUser calls the "ValidateUser" endpoint of the "auth" service.
// ValidateUser may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "rate_limited" (type RateLimited)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_otp" (type InvalidOtp)
//   - "user_not_found" (type UserNotFound)
//   - "unauthorized" (type Unauthorized)
//   - error: internal error
func (c *Client) ValidateUser(ctx context.Context, p *ValidateUserPayload) (res *UserValidationResponse, err error) {
	var ires any
	ires, err = c.ValidateUserEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UserValidationResponse), nil
}

// GetUserByID calls the "GetUserByID" endpoint of the "auth" service.
// GetUserByID may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "rate_limited" (type RateLimited)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_otp" (type InvalidOtp)
//   - "user_not_found" (type UserNotFound)
//   - "unauthorized" (type Unauthorized)
//   - error: internal error
func (c *Client) GetUserByID(ctx context.Context, p *GetUserByIDPayload) (res *User, err error) {
	var ires any
	ires, err = c.GetUserByIDEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*User), nil
}

// Logout calls the "Logout" endpoint of the "auth" service.
// Logout may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "rate_limited" (type RateLimited)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_otp" (type InvalidOtp)
//   - "user_not_found" (type UserNotFound)
//   - "unauthorized" (type Unauthorized)
//   - error: internal error
func (c *Client) Logout(ctx context.Context, p *LogoutPayload) (res *SimpleResponse, err error) {
	var ires any
	ires, err = c.LogoutEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SimpleResponse), nil
}

// GetUserProfile calls the "GetUserProfile" endpoint of the "auth" service.
// GetUserProfile may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "rate_limited" (type RateLimited)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_otp" (type InvalidOtp)
//   - "user_not_found" (type UserNotFound)
//   - "unauthorized" (type Unauthorized)
//   - error: internal error
func (c *Client) GetUserProfile(ctx context.Context, p *GetUserProfilePayload) (res *User, err error) {
	var ires any
	ires, err = c.GetUserProfileEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*User), nil
}
