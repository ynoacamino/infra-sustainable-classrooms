// Code generated by goa v3.21.1, DO NOT EDIT.
//
// profiles gRPC client types
//
// Command:
// $ goa gen
// github.com/ynoacamino/infra-sustainable-classrooms/services/profiles/design/api
// -o ./services/profiles/

package client

import (
	profilespb "github.com/ynoacamino/infra-sustainable-classrooms/services/profiles/gen/grpc/profiles/pb"
	profiles "github.com/ynoacamino/infra-sustainable-classrooms/services/profiles/gen/profiles"
)

// NewProtoGetCompleteProfileRequest builds the gRPC request type from the
// payload of the "GetCompleteProfile" endpoint of the "profiles" service.
func NewProtoGetCompleteProfileRequest(payload *profiles.GetCompleteProfilePayload) *profilespb.GetCompleteProfileRequest {
	message := &profilespb.GetCompleteProfileRequest{
		SessionToken: payload.SessionToken,
	}
	return message
}

// NewGetCompleteProfileResult builds the result type of the
// "GetCompleteProfile" endpoint of the "profiles" service from the gRPC
// response type.
func NewGetCompleteProfileResult(message *profilespb.GetCompleteProfileResponse) *profiles.CompleteProfileResponse {
	result := &profiles.CompleteProfileResponse{
		UserID:     message.UserId,
		Role:       message.Role,
		FirstName:  message.FirstName,
		LastName:   message.LastName,
		Email:      message.Email,
		Phone:      message.Phone,
		AvatarURL:  message.AvatarUrl,
		Bio:        message.Bio,
		CreatedAt:  message.CreatedAt,
		UpdatedAt:  message.UpdatedAt,
		IsActive:   message.IsActive,
		GradeLevel: message.GradeLevel,
		Major:      message.Major,
		Position:   message.Position,
	}
	return result
}

// NewProtoGetPublicProfileByIDRequest builds the gRPC request type from the
// payload of the "GetPublicProfileById" endpoint of the "profiles" service.
func NewProtoGetPublicProfileByIDRequest(payload *profiles.GetPublicProfileByIDPayload) *profilespb.GetPublicProfileByIDRequest {
	message := &profilespb.GetPublicProfileByIDRequest{
		UserId: payload.UserID,
	}
	return message
}

// NewGetPublicProfileByIDResult builds the result type of the
// "GetPublicProfileById" endpoint of the "profiles" service from the gRPC
// response type.
func NewGetPublicProfileByIDResult(message *profilespb.GetPublicProfileByIDResponse) *profiles.PublicProfileResponse {
	result := &profiles.PublicProfileResponse{
		UserID:    message.UserId,
		Role:      message.Role,
		FirstName: message.FirstName,
		LastName:  message.LastName,
		AvatarURL: message.AvatarUrl,
		Bio:       message.Bio,
		IsActive:  message.IsActive,
	}
	return result
}

// NewProtoValidateUserRoleRequest builds the gRPC request type from the
// payload of the "ValidateUserRole" endpoint of the "profiles" service.
func NewProtoValidateUserRoleRequest(payload *profiles.ValidateUserRolePayload) *profilespb.ValidateUserRoleRequest {
	message := &profilespb.ValidateUserRoleRequest{
		UserId: payload.UserID,
	}
	return message
}

// NewValidateUserRoleResult builds the result type of the "ValidateUserRole"
// endpoint of the "profiles" service from the gRPC response type.
func NewValidateUserRoleResult(message *profilespb.ValidateUserRoleResponse) *profiles.RoleValidationResponse {
	result := &profiles.RoleValidationResponse{
		UserID: message.UserId,
		Role:   message.Role,
	}
	return result
}
