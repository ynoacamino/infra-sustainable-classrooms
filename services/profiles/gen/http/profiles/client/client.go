// Code generated by goa v3.21.1, DO NOT EDIT.
//
// profiles client HTTP transport
//
// Command:
// $ goa gen
// github.com/ynoacamino/infra-sustainable-classrooms/services/profiles/design/api
// -o ./services/profiles/

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the profiles service endpoint HTTP clients.
type Client struct {
	// CreateStudentProfile Doer is the HTTP client used to make requests to the
	// CreateStudentProfile endpoint.
	CreateStudentProfileDoer goahttp.Doer

	// CreateTeacherProfile Doer is the HTTP client used to make requests to the
	// CreateTeacherProfile endpoint.
	CreateTeacherProfileDoer goahttp.Doer

	// GetCompleteProfile Doer is the HTTP client used to make requests to the
	// GetCompleteProfile endpoint.
	GetCompleteProfileDoer goahttp.Doer

	// GetPublicProfileByID Doer is the HTTP client used to make requests to the
	// GetPublicProfileById endpoint.
	GetPublicProfileByIDDoer goahttp.Doer

	// UpdateProfile Doer is the HTTP client used to make requests to the
	// UpdateProfile endpoint.
	UpdateProfileDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the profiles service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		CreateStudentProfileDoer: doer,
		CreateTeacherProfileDoer: doer,
		GetCompleteProfileDoer:   doer,
		GetPublicProfileByIDDoer: doer,
		UpdateProfileDoer:        doer,
		RestoreResponseBody:      restoreBody,
		scheme:                   scheme,
		host:                     host,
		decoder:                  dec,
		encoder:                  enc,
	}
}

// CreateStudentProfile returns an endpoint that makes HTTP requests to the
// profiles service CreateStudentProfile server.
func (c *Client) CreateStudentProfile() goa.Endpoint {
	var (
		encodeRequest  = EncodeCreateStudentProfileRequest(c.encoder)
		decodeResponse = DecodeCreateStudentProfileResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildCreateStudentProfileRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.CreateStudentProfileDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("profiles", "CreateStudentProfile", err)
		}
		return decodeResponse(resp)
	}
}

// CreateTeacherProfile returns an endpoint that makes HTTP requests to the
// profiles service CreateTeacherProfile server.
func (c *Client) CreateTeacherProfile() goa.Endpoint {
	var (
		encodeRequest  = EncodeCreateTeacherProfileRequest(c.encoder)
		decodeResponse = DecodeCreateTeacherProfileResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildCreateTeacherProfileRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.CreateTeacherProfileDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("profiles", "CreateTeacherProfile", err)
		}
		return decodeResponse(resp)
	}
}

// GetCompleteProfile returns an endpoint that makes HTTP requests to the
// profiles service GetCompleteProfile server.
func (c *Client) GetCompleteProfile() goa.Endpoint {
	var (
		encodeRequest  = EncodeGetCompleteProfileRequest(c.encoder)
		decodeResponse = DecodeGetCompleteProfileResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildGetCompleteProfileRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetCompleteProfileDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("profiles", "GetCompleteProfile", err)
		}
		return decodeResponse(resp)
	}
}

// GetPublicProfileByID returns an endpoint that makes HTTP requests to the
// profiles service GetPublicProfileById server.
func (c *Client) GetPublicProfileByID() goa.Endpoint {
	var (
		decodeResponse = DecodeGetPublicProfileByIDResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildGetPublicProfileByIDRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetPublicProfileByIDDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("profiles", "GetPublicProfileById", err)
		}
		return decodeResponse(resp)
	}
}

// UpdateProfile returns an endpoint that makes HTTP requests to the profiles
// service UpdateProfile server.
func (c *Client) UpdateProfile() goa.Endpoint {
	var (
		encodeRequest  = EncodeUpdateProfileRequest(c.encoder)
		decodeResponse = DecodeUpdateProfileResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildUpdateProfileRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.UpdateProfileDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("profiles", "UpdateProfile", err)
		}
		return decodeResponse(resp)
	}
}
