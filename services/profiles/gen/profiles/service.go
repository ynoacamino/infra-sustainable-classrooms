// Code generated by goa v3.21.1, DO NOT EDIT.
//
// profiles service
//
// Command:
// $ goa gen
// github.com/ynoacamino/infra-sustainable-classrooms/services/profiles/design/api
// -o ./services/profiles/

package profiles

import (
	"context"
)

// Profiles microservice for managing student and teacher profiles
type Service interface {
	// Create a new student profile with basic information
	CreateStudentProfile(context.Context, *CreateStudentProfilePayload) (res *StudentProfileResponse, err error)
	// Create a new teacher profile with basic information
	CreateTeacherProfile(context.Context, *CreateTeacherProfilePayload) (res *TeacherProfileResponse, err error)
	// Get user's complete profile
	GetCompleteProfile(context.Context, *GetCompleteProfilePayload) (res *CompleteProfileResponse, err error)
	// Get public profile information by user ID
	GetPublicProfileByID(context.Context, *GetPublicProfileByIDPayload) (res *PublicProfileResponse, err error)
	// Update basic profile information
	UpdateProfile(context.Context, *UpdateProfilePayload) (res *ProfileResponse, err error)
	// Validate user role for inter-service communication
	ValidateUserRole(context.Context, *ValidateUserRolePayload) (res *RoleValidationResponse, err error)
}

// APIName is the name of the API as defined in the design.
const APIName = "profiles"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "1.0"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "profiles"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [6]string{"CreateStudentProfile", "CreateTeacherProfile", "GetCompleteProfile", "GetPublicProfileById", "UpdateProfile", "ValidateUserRole"}

// CompleteProfileResponse is the result type of the profiles service
// GetCompleteProfile method.
type CompleteProfileResponse struct {
	// User identifier
	UserID int64
	// User role (student, teacher)
	Role string
	// First name
	FirstName string
	// Last name
	LastName string
	// Email address
	Email string
	// Phone number
	Phone *string
	// Profile picture URL
	AvatarURL *string
	// Biography/description
	Bio *string
	// Profile creation timestamp
	CreatedAt int64
	// Last update timestamp
	UpdatedAt *int64
	// Whether profile is active
	IsActive bool
	// Grade level (for students)
	GradeLevel *string
	// Major/field of study (for students)
	Major *string
	// Position/title (for teachers)
	Position *string
}

// CreateStudentProfilePayload is the payload type of the profiles service
// CreateStudentProfile method.
type CreateStudentProfilePayload struct {
	// Authentication session token
	SessionToken string
	// First name
	FirstName string
	// Last name
	LastName string
	// Email address
	Email string
	// Phone number
	Phone *string
	// Profile picture URL
	AvatarURL *string
	// Biography/description
	Bio *string
	// Grade level (1-12, undergraduate, graduate)
	GradeLevel string
	// Major/field of study
	Major *string
}

// CreateTeacherProfilePayload is the payload type of the profiles service
// CreateTeacherProfile method.
type CreateTeacherProfilePayload struct {
	// Authentication session token
	SessionToken string
	// First name
	FirstName string
	// Last name
	LastName string
	// Email address
	Email string
	// Phone number
	Phone *string
	// Profile picture URL
	AvatarURL *string
	// Biography/description
	Bio *string
	// Position/title
	Position string
}

// GetCompleteProfilePayload is the payload type of the profiles service
// GetCompleteProfile method.
type GetCompleteProfilePayload struct {
	// Authentication session token
	SessionToken string
}

// GetPublicProfileByIDPayload is the payload type of the profiles service
// GetPublicProfileById method.
type GetPublicProfileByIDPayload struct {
	// User ID to retrieve profile for
	UserID int64
}

// ProfileResponse is the result type of the profiles service UpdateProfile
// method.
type ProfileResponse struct {
	// User identifier
	UserID int64
	// User role (student, teacher)
	Role string
	// First name
	FirstName string
	// Last name
	LastName string
	// Email address
	Email string
	// Phone number
	Phone *string
	// Profile picture URL
	AvatarURL *string
	// Biography/description
	Bio *string
	// Profile creation timestamp
	CreatedAt int64
	// Last update timestamp
	UpdatedAt *int64
	// Whether profile is active
	IsActive bool
}

// PublicProfileResponse is the result type of the profiles service
// GetPublicProfileById method.
type PublicProfileResponse struct {
	// User identifier
	UserID int64
	// User role
	Role string
	// First name
	FirstName string
	// Last name
	LastName string
	// Profile picture URL
	AvatarURL *string
	// Public biography
	Bio *string
	// Whether profile is active
	IsActive bool
}

// RoleValidationResponse is the result type of the profiles service
// ValidateUserRole method.
type RoleValidationResponse struct {
	// User identifier
	UserID int64
	// User role
	Role string
}

// StudentProfileResponse is the result type of the profiles service
// CreateStudentProfile method.
type StudentProfileResponse struct {
	// User identifier
	UserID int64
	// First name
	FirstName string
	// Last name
	LastName string
	// Email address
	Email string
	// Phone number
	Phone *string
	// Profile picture URL
	AvatarURL *string
	// Biography/description
	Bio *string
	// Grade level
	GradeLevel string
	// Major/field of study
	Major *string
	// Profile creation timestamp
	CreatedAt int64
	// Last update timestamp
	UpdatedAt *int64
	// Whether profile is active
	IsActive bool
}

// TeacherProfileResponse is the result type of the profiles service
// CreateTeacherProfile method.
type TeacherProfileResponse struct {
	// User identifier
	UserID int64
	// First name
	FirstName string
	// Last name
	LastName string
	// Email address
	Email string
	// Phone number
	Phone *string
	// Profile picture URL
	AvatarURL *string
	// Biography/description
	Bio *string
	// Position/title
	Position string
	// Profile creation timestamp
	CreatedAt int64
	// Last update timestamp
	UpdatedAt *int64
	// Whether profile is active
	IsActive bool
}

// UpdateProfilePayload is the payload type of the profiles service
// UpdateProfile method.
type UpdateProfilePayload struct {
	// Authentication session token
	SessionToken string
	// Updated first name
	FirstName *string
	// Updated last name
	LastName *string
	// Updated email address
	Email *string
	// Updated phone number
	Phone *string
	// Updated profile picture URL
	AvatarURL *string
	// Updated biography
	Bio *string
	// Updated major (students)
	Major *string
	// Updated position (teachers)
	Position *string
}

// ValidateUserRolePayload is the payload type of the profiles service
// ValidateUserRole method.
type ValidateUserRolePayload struct {
	// User ID to validate
	UserID int64
}

// Invalid input parameters
type InvalidInput string

// Invalid role specified
type InvalidRole string

// Permission denied
type PermissionDenied string

// Profile already exists
type ProfileAlreadyExists string

// Profile not found
type ProfileNotFound string

// Unauthorized access
type Unauthorized string

// Error returns an error description.
func (e InvalidInput) Error() string {
	return "Invalid input parameters"
}

// ErrorName returns "invalid_input".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e InvalidInput) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "invalid_input".
func (e InvalidInput) GoaErrorName() string {
	return "invalid_input"
}

// Error returns an error description.
func (e InvalidRole) Error() string {
	return "Invalid role specified"
}

// ErrorName returns "invalid_role".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e InvalidRole) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "invalid_role".
func (e InvalidRole) GoaErrorName() string {
	return "invalid_role"
}

// Error returns an error description.
func (e PermissionDenied) Error() string {
	return "Permission denied"
}

// ErrorName returns "permission_denied".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e PermissionDenied) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "permission_denied".
func (e PermissionDenied) GoaErrorName() string {
	return "permission_denied"
}

// Error returns an error description.
func (e ProfileAlreadyExists) Error() string {
	return "Profile already exists"
}

// ErrorName returns "profile_already_exists".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e ProfileAlreadyExists) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "profile_already_exists".
func (e ProfileAlreadyExists) GoaErrorName() string {
	return "profile_already_exists"
}

// Error returns an error description.
func (e ProfileNotFound) Error() string {
	return "Profile not found"
}

// ErrorName returns "profile_not_found".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e ProfileNotFound) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "profile_not_found".
func (e ProfileNotFound) GoaErrorName() string {
	return "profile_not_found"
}

// Error returns an error description.
func (e Unauthorized) Error() string {
	return "Unauthorized access"
}

// ErrorName returns "unauthorized".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e Unauthorized) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "unauthorized".
func (e Unauthorized) GoaErrorName() string {
	return "unauthorized"
}
