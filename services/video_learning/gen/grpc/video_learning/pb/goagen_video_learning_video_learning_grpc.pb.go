// Code generated with goa v3.21.1, DO NOT EDIT.
//
// video_learning protocol buffer definition
//
// Command:
// $ goa gen
// github.com/ynoacamino/infra-sustainable-classrooms/services/video_learning/design/api
// -o ./services/video_learning/

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: goagen_video_learning_video_learning.proto

package video_learningpb

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

// VideoLearningClient is the client API for VideoLearning service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Video Learning microservice
type VideoLearningClient interface {
}

type videoLearningClient struct {
	cc grpc.ClientConnInterface
}

func NewVideoLearningClient(cc grpc.ClientConnInterface) VideoLearningClient {
	return &videoLearningClient{cc}
}

// VideoLearningServer is the server API for VideoLearning service.
// All implementations must embed UnimplementedVideoLearningServer
// for forward compatibility.
//
// Video Learning microservice
type VideoLearningServer interface {
	mustEmbedUnimplementedVideoLearningServer()
}

// UnimplementedVideoLearningServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedVideoLearningServer struct{}

func (UnimplementedVideoLearningServer) mustEmbedUnimplementedVideoLearningServer() {}
func (UnimplementedVideoLearningServer) testEmbeddedByValue()                       {}

// UnsafeVideoLearningServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to VideoLearningServer will
// result in compilation errors.
type UnsafeVideoLearningServer interface {
	mustEmbedUnimplementedVideoLearningServer()
}

func RegisterVideoLearningServer(s grpc.ServiceRegistrar, srv VideoLearningServer) {
	// If the following call pancis, it indicates UnimplementedVideoLearningServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&VideoLearning_ServiceDesc, srv)
}

// VideoLearning_ServiceDesc is the grpc.ServiceDesc for VideoLearning service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var VideoLearning_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "video_learning.VideoLearning",
	HandlerType: (*VideoLearningServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "goagen_video_learning_video_learning.proto",
}
