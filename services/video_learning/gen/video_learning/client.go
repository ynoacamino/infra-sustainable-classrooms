// Code generated by goa v3.21.1, DO NOT EDIT.
//
// video_learning client
//
// Command:
// $ goa gen
// github.com/ynoacamino/infra-sustainable-classrooms/services/video_learning/design/api
// -o ./services/video_learning/

package videolearning

import (
	"context"
	"io"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "video_learning" service client.
type Client struct {
	SearchVideosEndpoint        goa.Endpoint
	GetRecommendationsEndpoint  goa.Endpoint
	GetVideoEndpoint            goa.Endpoint
	GetCommentsEndpoint         goa.Endpoint
	CreateCommentEndpoint       goa.Endpoint
	GetOwnVideosEndpoint        goa.Endpoint
	InitialUploadEndpoint       goa.Endpoint
	CompleteUploadEndpoint      goa.Endpoint
	UploadThumbnailEndpoint     goa.Endpoint
	GetAllCategoriesEndpoint    goa.Endpoint
	GetAllTagsEndpoint          goa.Endpoint
	ToggleVideoLikeEndpoint     goa.Endpoint
	DeleteVideoEndpoint         goa.Endpoint
	GetVideosByCategoryEndpoint goa.Endpoint
	GetSimilarVideosEndpoint    goa.Endpoint
	DeleteCommentEndpoint       goa.Endpoint
	GetOrCreateCategoryEndpoint goa.Endpoint
	GetCategoryByIDEndpoint     goa.Endpoint
	GetOrCreateTagEndpoint      goa.Endpoint
	GetTagByIDEndpoint          goa.Endpoint
}

// NewClient initializes a "video_learning" service client given the endpoints.
func NewClient(searchVideos, getRecommendations, getVideo, getComments, createComment, getOwnVideos, initialUpload, completeUpload, uploadThumbnail, getAllCategories, getAllTags, toggleVideoLike, deleteVideo, getVideosByCategory, getSimilarVideos, deleteComment, getOrCreateCategory, getCategoryByID, getOrCreateTag, getTagByID goa.Endpoint) *Client {
	return &Client{
		SearchVideosEndpoint:        searchVideos,
		GetRecommendationsEndpoint:  getRecommendations,
		GetVideoEndpoint:            getVideo,
		GetCommentsEndpoint:         getComments,
		CreateCommentEndpoint:       createComment,
		GetOwnVideosEndpoint:        getOwnVideos,
		InitialUploadEndpoint:       initialUpload,
		CompleteUploadEndpoint:      completeUpload,
		UploadThumbnailEndpoint:     uploadThumbnail,
		GetAllCategoriesEndpoint:    getAllCategories,
		GetAllTagsEndpoint:          getAllTags,
		ToggleVideoLikeEndpoint:     toggleVideoLike,
		DeleteVideoEndpoint:         deleteVideo,
		GetVideosByCategoryEndpoint: getVideosByCategory,
		GetSimilarVideosEndpoint:    getSimilarVideos,
		DeleteCommentEndpoint:       deleteComment,
		GetOrCreateCategoryEndpoint: getOrCreateCategory,
		GetCategoryByIDEndpoint:     getCategoryByID,
		GetOrCreateTagEndpoint:      getOrCreateTag,
		GetTagByIDEndpoint:          getTagByID,
	}
}

// SearchVideos calls the "SearchVideos" endpoint of the "video_learning"
// service.
// SearchVideos may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) SearchVideos(ctx context.Context, p *SearchVideosPayload) (res *VideoList, err error) {
	var ires any
	ires, err = c.SearchVideosEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*VideoList), nil
}

// GetRecommendations calls the "GetRecommendations" endpoint of the
// "video_learning" service.
// GetRecommendations may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) GetRecommendations(ctx context.Context, p *GetRecommendationsPayload) (res *VideoList, err error) {
	var ires any
	ires, err = c.GetRecommendationsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*VideoList), nil
}

// GetVideo calls the "GetVideo" endpoint of the "video_learning" service.
// GetVideo may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) GetVideo(ctx context.Context, p *GetVideoPayload) (res *VideoDetails, err error) {
	var ires any
	ires, err = c.GetVideoEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*VideoDetails), nil
}

// GetComments calls the "GetComments" endpoint of the "video_learning" service.
// GetComments may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) GetComments(ctx context.Context, p *GetCommentsPayload) (res *CommentList, err error) {
	var ires any
	ires, err = c.GetCommentsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CommentList), nil
}

// CreateComment calls the "CreateComment" endpoint of the "video_learning"
// service.
// CreateComment may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) CreateComment(ctx context.Context, p *CreateCommentPayload) (res *SimpleResponse, err error) {
	var ires any
	ires, err = c.CreateCommentEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SimpleResponse), nil
}

// GetOwnVideos calls the "GetOwnVideos" endpoint of the "video_learning"
// service.
// GetOwnVideos may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) GetOwnVideos(ctx context.Context, p *GetOwnVideosPayload) (res []*OwnVideo, err error) {
	var ires any
	ires, err = c.GetOwnVideosEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*OwnVideo), nil
}

// InitialUpload calls the "InitialUpload" endpoint of the "video_learning"
// service.
// InitialUpload may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) InitialUpload(ctx context.Context, p *InitialUploadPayload, req io.ReadCloser) (res *UploadResponse, err error) {
	var ires any
	ires, err = c.InitialUploadEndpoint(ctx, &InitialUploadRequestData{Payload: p, Body: req})
	if err != nil {
		return
	}
	return ires.(*UploadResponse), nil
}

// CompleteUpload calls the "CompleteUpload" endpoint of the "video_learning"
// service.
// CompleteUpload may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) CompleteUpload(ctx context.Context, p *CompleteUploadPayload) (res *SimpleResponse, err error) {
	var ires any
	ires, err = c.CompleteUploadEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SimpleResponse), nil
}

// UploadThumbnail calls the "UploadThumbnail" endpoint of the "video_learning"
// service.
// UploadThumbnail may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) UploadThumbnail(ctx context.Context, p *UploadThumbnailPayload, req io.ReadCloser) (res *UploadResponse, err error) {
	var ires any
	ires, err = c.UploadThumbnailEndpoint(ctx, &UploadThumbnailRequestData{Payload: p, Body: req})
	if err != nil {
		return
	}
	return ires.(*UploadResponse), nil
}

// GetAllCategories calls the "GetAllCategories" endpoint of the
// "video_learning" service.
// GetAllCategories may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) GetAllCategories(ctx context.Context, p *GetAllCategoriesPayload) (res []*VideoCategory, err error) {
	var ires any
	ires, err = c.GetAllCategoriesEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*VideoCategory), nil
}

// GetAllTags calls the "GetAllTags" endpoint of the "video_learning" service.
// GetAllTags may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) GetAllTags(ctx context.Context, p *GetAllTagsPayload) (res []*VideoTag, err error) {
	var ires any
	ires, err = c.GetAllTagsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*VideoTag), nil
}

// ToggleVideoLike calls the "ToggleVideoLike" endpoint of the "video_learning"
// service.
// ToggleVideoLike may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) ToggleVideoLike(ctx context.Context, p *ToggleVideoLikePayload) (res *SimpleResponse, err error) {
	var ires any
	ires, err = c.ToggleVideoLikeEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SimpleResponse), nil
}

// DeleteVideo calls the "DeleteVideo" endpoint of the "video_learning" service.
// DeleteVideo may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) DeleteVideo(ctx context.Context, p *DeleteVideoPayload) (res *SimpleResponse, err error) {
	var ires any
	ires, err = c.DeleteVideoEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SimpleResponse), nil
}

// GetVideosByCategory calls the "GetVideosByCategory" endpoint of the
// "video_learning" service.
// GetVideosByCategory may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) GetVideosByCategory(ctx context.Context, p *GetVideosByCategoryPayload) (res *VideoList, err error) {
	var ires any
	ires, err = c.GetVideosByCategoryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*VideoList), nil
}

// GetSimilarVideos calls the "GetSimilarVideos" endpoint of the
// "video_learning" service.
// GetSimilarVideos may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) GetSimilarVideos(ctx context.Context, p *GetSimilarVideosPayload) (res *VideoList, err error) {
	var ires any
	ires, err = c.GetSimilarVideosEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*VideoList), nil
}

// DeleteComment calls the "DeleteComment" endpoint of the "video_learning"
// service.
// DeleteComment may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) DeleteComment(ctx context.Context, p *DeleteCommentPayload) (res *SimpleResponse, err error) {
	var ires any
	ires, err = c.DeleteCommentEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SimpleResponse), nil
}

// GetOrCreateCategory calls the "GetOrCreateCategory" endpoint of the
// "video_learning" service.
// GetOrCreateCategory may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) GetOrCreateCategory(ctx context.Context, p *GetOrCreateCategoryPayload) (res *VideoCategory, err error) {
	var ires any
	ires, err = c.GetOrCreateCategoryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*VideoCategory), nil
}

// GetCategoryByID calls the "GetCategoryById" endpoint of the "video_learning"
// service.
// GetCategoryByID may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) GetCategoryByID(ctx context.Context, p *GetCategoryByIDPayload) (res *VideoCategory, err error) {
	var ires any
	ires, err = c.GetCategoryByIDEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*VideoCategory), nil
}

// GetOrCreateTag calls the "GetOrCreateTag" endpoint of the "video_learning"
// service.
// GetOrCreateTag may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) GetOrCreateTag(ctx context.Context, p *GetOrCreateTagPayload) (res *VideoTag, err error) {
	var ires any
	ires, err = c.GetOrCreateTagEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*VideoTag), nil
}

// GetTagByID calls the "GetTagById" endpoint of the "video_learning" service.
// GetTagByID may return the following errors:
//   - "invalid_input" (type InvalidInput)
//   - "video_not_found" (type VideoNotFound)
//   - "unauthorized" (type Unauthorized)
//   - "upload_failed" (type UploadFailed)
//   - "service_unavailable" (type ServiceUnavailable)
//   - "invalid_session" (type InvalidSession)
//   - "permission_denied" (type PermissionDenied)
//   - "profile_not_found" (type ProfileNotFound)
//   - "category_not_found" (type CategoryNotFound)
//   - "tag_not_found" (type TagNotFound)
//   - "invalid_content_type" (type InvalidContentType)
//   - error: internal error
func (c *Client) GetTagByID(ctx context.Context, p *GetTagByIDPayload) (res *VideoTag, err error) {
	var ires any
	ires, err = c.GetTagByIDEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*VideoTag), nil
}
