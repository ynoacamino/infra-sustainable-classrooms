// Code generated by goa v3.21.1, DO NOT EDIT.
//
// video_learning endpoints
//
// Command:
// $ goa gen
// github.com/ynoacamino/infra-sustainable-classrooms/services/video_learning/design/api
// -o ./services/video_learning/

package videolearning

import (
	"context"
	"io"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "video_learning" service endpoints.
type Endpoints struct {
	SearchVideos        goa.Endpoint
	GetRecommendations  goa.Endpoint
	GetVideo            goa.Endpoint
	GetComments         goa.Endpoint
	CreateComment       goa.Endpoint
	GetOwnVideos        goa.Endpoint
	InitialUpload       goa.Endpoint
	CompleteUpload      goa.Endpoint
	UploadThumbnail     goa.Endpoint
	GetAllCategories    goa.Endpoint
	GetAllTags          goa.Endpoint
	ToggleVideoLike     goa.Endpoint
	DeleteVideo         goa.Endpoint
	GetVideosByCategory goa.Endpoint
	GetSimilarVideos    goa.Endpoint
	DeleteComment       goa.Endpoint
	GetOrCreateCategory goa.Endpoint
	GetCategoryByID     goa.Endpoint
	GetOrCreateTag      goa.Endpoint
	GetTagByID          goa.Endpoint
}

// InitialUploadRequestData holds both the payload and the HTTP request body
// reader of the "InitialUpload" method.
type InitialUploadRequestData struct {
	// Payload is the method payload.
	Payload *InitialUploadPayload
	// Body streams the HTTP request body.
	Body io.ReadCloser
}

// UploadThumbnailRequestData holds both the payload and the HTTP request body
// reader of the "UploadThumbnail" method.
type UploadThumbnailRequestData struct {
	// Payload is the method payload.
	Payload *UploadThumbnailPayload
	// Body streams the HTTP request body.
	Body io.ReadCloser
}

// NewEndpoints wraps the methods of the "video_learning" service with
// endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		SearchVideos:        NewSearchVideosEndpoint(s),
		GetRecommendations:  NewGetRecommendationsEndpoint(s),
		GetVideo:            NewGetVideoEndpoint(s),
		GetComments:         NewGetCommentsEndpoint(s),
		CreateComment:       NewCreateCommentEndpoint(s),
		GetOwnVideos:        NewGetOwnVideosEndpoint(s),
		InitialUpload:       NewInitialUploadEndpoint(s),
		CompleteUpload:      NewCompleteUploadEndpoint(s),
		UploadThumbnail:     NewUploadThumbnailEndpoint(s),
		GetAllCategories:    NewGetAllCategoriesEndpoint(s),
		GetAllTags:          NewGetAllTagsEndpoint(s),
		ToggleVideoLike:     NewToggleVideoLikeEndpoint(s),
		DeleteVideo:         NewDeleteVideoEndpoint(s),
		GetVideosByCategory: NewGetVideosByCategoryEndpoint(s),
		GetSimilarVideos:    NewGetSimilarVideosEndpoint(s),
		DeleteComment:       NewDeleteCommentEndpoint(s),
		GetOrCreateCategory: NewGetOrCreateCategoryEndpoint(s),
		GetCategoryByID:     NewGetCategoryByIDEndpoint(s),
		GetOrCreateTag:      NewGetOrCreateTagEndpoint(s),
		GetTagByID:          NewGetTagByIDEndpoint(s),
	}
}

// Use applies the given middleware to all the "video_learning" service
// endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.SearchVideos = m(e.SearchVideos)
	e.GetRecommendations = m(e.GetRecommendations)
	e.GetVideo = m(e.GetVideo)
	e.GetComments = m(e.GetComments)
	e.CreateComment = m(e.CreateComment)
	e.GetOwnVideos = m(e.GetOwnVideos)
	e.InitialUpload = m(e.InitialUpload)
	e.CompleteUpload = m(e.CompleteUpload)
	e.UploadThumbnail = m(e.UploadThumbnail)
	e.GetAllCategories = m(e.GetAllCategories)
	e.GetAllTags = m(e.GetAllTags)
	e.ToggleVideoLike = m(e.ToggleVideoLike)
	e.DeleteVideo = m(e.DeleteVideo)
	e.GetVideosByCategory = m(e.GetVideosByCategory)
	e.GetSimilarVideos = m(e.GetSimilarVideos)
	e.DeleteComment = m(e.DeleteComment)
	e.GetOrCreateCategory = m(e.GetOrCreateCategory)
	e.GetCategoryByID = m(e.GetCategoryByID)
	e.GetOrCreateTag = m(e.GetOrCreateTag)
	e.GetTagByID = m(e.GetTagByID)
}

// NewSearchVideosEndpoint returns an endpoint function that calls the method
// "SearchVideos" of service "video_learning".
func NewSearchVideosEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*SearchVideosPayload)
		return s.SearchVideos(ctx, p)
	}
}

// NewGetRecommendationsEndpoint returns an endpoint function that calls the
// method "GetRecommendations" of service "video_learning".
func NewGetRecommendationsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetRecommendationsPayload)
		return s.GetRecommendations(ctx, p)
	}
}

// NewGetVideoEndpoint returns an endpoint function that calls the method
// "GetVideo" of service "video_learning".
func NewGetVideoEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetVideoPayload)
		return s.GetVideo(ctx, p)
	}
}

// NewGetCommentsEndpoint returns an endpoint function that calls the method
// "GetComments" of service "video_learning".
func NewGetCommentsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetCommentsPayload)
		return s.GetComments(ctx, p)
	}
}

// NewCreateCommentEndpoint returns an endpoint function that calls the method
// "CreateComment" of service "video_learning".
func NewCreateCommentEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreateCommentPayload)
		return s.CreateComment(ctx, p)
	}
}

// NewGetOwnVideosEndpoint returns an endpoint function that calls the method
// "GetOwnVideos" of service "video_learning".
func NewGetOwnVideosEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetOwnVideosPayload)
		return s.GetOwnVideos(ctx, p)
	}
}

// NewInitialUploadEndpoint returns an endpoint function that calls the method
// "InitialUpload" of service "video_learning".
func NewInitialUploadEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		ep := req.(*InitialUploadRequestData)
		return s.InitialUpload(ctx, ep.Payload, ep.Body)
	}
}

// NewCompleteUploadEndpoint returns an endpoint function that calls the method
// "CompleteUpload" of service "video_learning".
func NewCompleteUploadEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CompleteUploadPayload)
		return s.CompleteUpload(ctx, p)
	}
}

// NewUploadThumbnailEndpoint returns an endpoint function that calls the
// method "UploadThumbnail" of service "video_learning".
func NewUploadThumbnailEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		ep := req.(*UploadThumbnailRequestData)
		return s.UploadThumbnail(ctx, ep.Payload, ep.Body)
	}
}

// NewGetAllCategoriesEndpoint returns an endpoint function that calls the
// method "GetAllCategories" of service "video_learning".
func NewGetAllCategoriesEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetAllCategoriesPayload)
		return s.GetAllCategories(ctx, p)
	}
}

// NewGetAllTagsEndpoint returns an endpoint function that calls the method
// "GetAllTags" of service "video_learning".
func NewGetAllTagsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetAllTagsPayload)
		return s.GetAllTags(ctx, p)
	}
}

// NewToggleVideoLikeEndpoint returns an endpoint function that calls the
// method "ToggleVideoLike" of service "video_learning".
func NewToggleVideoLikeEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ToggleVideoLikePayload)
		return s.ToggleVideoLike(ctx, p)
	}
}

// NewDeleteVideoEndpoint returns an endpoint function that calls the method
// "DeleteVideo" of service "video_learning".
func NewDeleteVideoEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteVideoPayload)
		return s.DeleteVideo(ctx, p)
	}
}

// NewGetVideosByCategoryEndpoint returns an endpoint function that calls the
// method "GetVideosByCategory" of service "video_learning".
func NewGetVideosByCategoryEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetVideosByCategoryPayload)
		return s.GetVideosByCategory(ctx, p)
	}
}

// NewGetSimilarVideosEndpoint returns an endpoint function that calls the
// method "GetSimilarVideos" of service "video_learning".
func NewGetSimilarVideosEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetSimilarVideosPayload)
		return s.GetSimilarVideos(ctx, p)
	}
}

// NewDeleteCommentEndpoint returns an endpoint function that calls the method
// "DeleteComment" of service "video_learning".
func NewDeleteCommentEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteCommentPayload)
		return s.DeleteComment(ctx, p)
	}
}

// NewGetOrCreateCategoryEndpoint returns an endpoint function that calls the
// method "GetOrCreateCategory" of service "video_learning".
func NewGetOrCreateCategoryEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetOrCreateCategoryPayload)
		return s.GetOrCreateCategory(ctx, p)
	}
}

// NewGetCategoryByIDEndpoint returns an endpoint function that calls the
// method "GetCategoryById" of service "video_learning".
func NewGetCategoryByIDEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetCategoryByIDPayload)
		return s.GetCategoryByID(ctx, p)
	}
}

// NewGetOrCreateTagEndpoint returns an endpoint function that calls the method
// "GetOrCreateTag" of service "video_learning".
func NewGetOrCreateTagEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetOrCreateTagPayload)
		return s.GetOrCreateTag(ctx, p)
	}
}

// NewGetTagByIDEndpoint returns an endpoint function that calls the method
// "GetTagById" of service "video_learning".
func NewGetTagByIDEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetTagByIDPayload)
		return s.GetTagByID(ctx, p)
	}
}
